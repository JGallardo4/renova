// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Renova.Data;

namespace Renova.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200509024906_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Renova.Models.Gallery.GallerySection", b =>
                {
                    b.Property<int>("GallerySectionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("GallerySectionId");

                    b.ToTable("GallerySections");

                    b.HasData(
                        new
                        {
                            GallerySectionId = 1,
                            Name = "Kitchen"
                        },
                        new
                        {
                            GallerySectionId = 2,
                            Name = "Living Room"
                        },
                        new
                        {
                            GallerySectionId = 3,
                            Name = "Bathroom"
                        },
                        new
                        {
                            GallerySectionId = 4,
                            Name = "Office"
                        },
                        new
                        {
                            GallerySectionId = 5,
                            Name = "Others"
                        });
                });

            modelBuilder.Entity("Renova.Models.Gallery.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .HasColumnType("int");

                    b.Property<int>("GallerySectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.HasKey("ImageId");

                    b.HasIndex("GallerySectionId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            ImageId = 1,
                            GallerySectionId = 1,
                            ImageUrl = "/images/kitchen/kitchen1_before_1.jpg",
                            Stage = 0
                        },
                        new
                        {
                            ImageId = 2,
                            GallerySectionId = 1,
                            ImageUrl = "/images/kitchen/kitchen1_during_1.jpg",
                            Stage = 1
                        },
                        new
                        {
                            ImageId = 3,
                            GallerySectionId = 1,
                            ImageUrl = "/images/kitchen/kitchen1_after_1.jpg",
                            Stage = 2
                        });
                });

            modelBuilder.Entity("Renova.Models.Gallery.Image", b =>
                {
                    b.HasOne("Renova.Models.Gallery.GallerySection", "GallerySection")
                        .WithMany("Images")
                        .HasForeignKey("GallerySectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
